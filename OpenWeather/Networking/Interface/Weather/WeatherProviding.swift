//
//  OpenWeather template generated by OpenBytes on 15/03/2023.
//
// Created by Ahmed Shendy.
//  WeatherNetworking.swift
//

import Foundation
import CoreLocation

enum WeatherError: LocalizedError, Equatable {
    case notAvailable(location: CLLocation)

    // swiftlint:disable line_length
    var errorDescription: String? {
        switch self {
        case .notAvailable(let location):
            return "\(#fileID): There is no weather data available for location: \(location.coordinate.latitude),\(location.coordinate.longitude)"
        }
    }
    // swiftlint:enable line_length

    static func == (lhs: Self, rhs: Self) -> Bool {
        lhs.errorDescription == rhs.errorDescription
    }
}

protocol WeatherProviding: CurrentWeatherProviding { }

protocol CurrentWeatherProviding {
    func weather(for location: CLLocation) async throws -> DeviceWeather
}

//
//  OpenWeather template generated by OpenBytes on 15/03/2023.
//
// Created by Ahmed Shendy.
//  WeatherProvider.swift
//

import Foundation
import WeatherKit
import CoreLocation

struct WeatherProvider: WeatherProviding {
    private let weatherService: WeatherService = .shared

    func weather(for location: CLLocation) async throws -> DeviceWeather {
        let weather = try await weatherService.weather(for: location)

        return WeatherAdapter.device(from: weather)
    }
}

struct MockWeatherProvider: WeatherProviding {
    private var map = Mock.locationWeatherMap

    func weather(for location: CLLocation) async throws -> DeviceWeather {
        guard let weather = map.first(
            where: { key, _ in
                return key.lat == location.coordinate.latitude
                && key.long == location.coordinate.longitude
            }
        )?.value else {
            throw WeatherError.notAvailable(location: location)
        }

        return weather
    }
}

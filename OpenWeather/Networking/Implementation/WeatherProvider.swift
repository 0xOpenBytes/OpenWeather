//
//  OpenWeather template generated by OpenBytes on 15/03/2023.
//
// Created by Ahmed Shendy.
//  WeatherProvider.swift
//

import Foundation
import WeatherKit
import CoreLocation

struct WeatherProvider: WeatherProviding {
    private let weatherService: WeatherService = .shared

    func currentWeather(for location: CLLocation) async throws -> DeviceWeather {
        let response = try await weather(for: location)

        return try WeatherAdapter.device(from: response.weather)
    }

    private func weather(for location: CLLocation) async throws -> WeatherResponse {
        let weather = try await weatherService.weather(for: location)
        return WeatherResponse(weather: weather)
    }
}

struct MockWeatherProvider: WeatherProviding {
    func currentWeather(for location: CLLocation) async throws -> DeviceWeather {
        return DeviceWeather(
            currentTemperature: .init(value: 9.01, unit: .celsius),
            realFeel: .init(value: 10.2, unit: .celsius),
            uv: 1,
            symbolName: "cloud.hail",
            wind: DeviceWind(
                direction: .init(value: 0, unit: .degrees),
                speed: .init(value: 10, unit: .kilometersPerHour),
                gust: nil),
            hourlyForecast: [
                DeviceHourlyForecast(
                    date: .now,
                    temperature: .init(value: 0, unit: .celsius),
                    symbolName: "cloud"
                )
            ]
        )
    }
}

//
//  OpenWeather template generated by OpenBytes on 23/03/2023.
//
// Created by Ahmed Shendy.
//  LocationAdapter.swift
//

import Foundation
import CoreLocation
import GRDB

enum LocationAdapter {
    static func device(from: LocationData) -> DeviceLocation {
        DeviceLocation(
            name: from.name,
            latitude: from.lat,
            longitude: from.long
        )
    }

    static func device(from: Row) throws -> DeviceLocation {
        guard from.count == 3 else {
            throw DatabaseError.invalidColumnCount
        }
        guard let name = from[0] as? String else {
            throw DatabaseError.missingColumn("name")
        }

        guard let lat = from[1] as? Double else {
            throw DatabaseError.missingColumn("lat")
        }

        guard let long = from[2] as? Double else {
            throw DatabaseError.missingColumn("long")
        }

        return DeviceLocation(
            name: name,
            latitude: lat,
            longitude: long
        )
    }

    static func data(from: DeviceLocation) -> LocationData {
        .init(
            name: from.name,
            lat: from.latitude,
            long: from.longitude
        )
    }
}

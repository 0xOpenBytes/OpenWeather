//
//  OpenWeather template generated by OpenBytes on 15/03/2023.
//
// Created by Ahmed Shendy.
//  WeatherDetailsScreen.swift
//

import SwiftUI
import CoreLocation

struct WeatherDetailsScreen: View {

    @ObservedObject var viewModel: WeatherDetailsViewModel

    init(viewModel: WeatherDetailsViewModel) {
        self.viewModel = viewModel
    }

    private let location: CLLocation = .init(latitude: 51.5072, longitude: 0.1276)

    var body: some View {
        VStack(spacing: 15) {
            Image(systemName: viewModel.symbolName)
                .symbolRenderingMode(.monochrome)
                .foregroundColor(.gray)
                .font(.system(size: 100))
                .padding(.bottom, 20)

            Text("Current Weather: \(viewModel.locationName)")
                .font(.title3)
                .fontWeight(.bold)

            HStack {
                Text("\(viewModel.temperature)")
                    .font(.system(size: 75))
                    .fontWeight(.heavy)
                    .foregroundColor(.blue)
            }

            HStack {
                VStack {
                    Text("\(viewModel.windSpeed)")
                        .fontWeight(.bold)
                        .foregroundColor(.black)

                    Text("Wind")
                        .foregroundColor(.black)
                }
                .font(.system(size: 25))

                Spacer()

                VStack {
                    Text("\(viewModel.uv)")
                        .fontWeight(.bold)
                        .foregroundColor(.black)

                    Text("UV")
                        .foregroundColor(.black)
                }
                .font(.system(size: 25))

                Spacer()

                VStack {
                    Text("\(viewModel.realFeel)")
                        .fontWeight(.bold)
                        .foregroundColor(.black)

                    Text("Feel")
                        .foregroundColor(.black)
                }
                .font(.system(size: 25))
            }
            .padding(.horizontal, 50)
        }
        .onAppear {
            viewModel.getWeather(for: location)
        }
    }
}

struct WeatherDetailsScreen_Previews: PreviewProvider {
    static var previews: some View {
        WeatherDetailsScreen(
            viewModel: .init(
                weatherProviding: MockWeatherProvider(),
                locationProviding: MockLocationProvider()
            )
        )
    }
}

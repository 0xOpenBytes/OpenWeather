//
//  OpenWeather template generated by OpenBytes on 12/15/22.
//  Copyright (c) 2023 OpenBytes
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the conditions found at the following link:
//  https://github.com/0xOpenBytes/ios-BASE/blob/main/LICENSE
//
// Created by Leif.
//  SearchScreen.swift
//

import OpenBytesNavigation
import SwiftUI

struct LocationResultItem: View {
    let name: String

    var body: some View {
        VStack {
            Text(name)

            // ...
        }
    }
}

struct SearchScreen: View {
    @State private var searchText: String = ""
    @ObservedObject var viewModel: SearchViewModel

    init(viewModel: SearchViewModel) {
        self.viewModel = viewModel
    }

    var body: some View {
        List {
            ForEach(viewModel.result) { location in
                LocationResultItem(name: location.name)
            }
        }
        .searchable(
            text: $viewModel.searchText,
            prompt: "Search by name or zipcode"
        )
        .navigationDestination(
            for: Date.self,
            destination: { date in
                Text(date, format: .dateTime)
            }
        )
        .navigationTitle("Search")
        .onReceive(
            viewModel.$searchText.debounce(for: 0.300, scheduler: RunLoop.main)
        ) { _ in
            viewModel.getLocations()
        }
    }
}

struct SearchScreen_Previews: PreviewProvider {
    static var previews: some View {
        OpenBytesNavigationView.preview {
            SearchScreen(
                viewModel: SearchViewModel(
                    locationProviding: MockLocationProvider()
                )
            )
        }
    }
}

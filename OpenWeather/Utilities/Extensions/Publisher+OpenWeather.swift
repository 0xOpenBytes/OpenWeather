//
//  OpenWeather template generated by OpenBytes on 16/05/2023.
//
// Created by Ahmed Shendy.
//  Publisher+OpenWeather.swift
//

import Combine

extension Publisher where Failure == Error {
    func asyncCompactMap<T>(
    _ transform: @escaping (Self.Output) async throws -> T?
    ) -> AnyPublisher<T, Error> {
        self
            .flatMap { value in
                Future { promise in
                    Task {
                        do {
                            let result = try await transform(value)
                            promise(.success(result))
                        } catch {
                            promise(.failure(error))
                        }
                    }
                }
                .compactMap { $0 }
                .eraseToAnyPublisher()
            }
            .eraseToAnyPublisher()
    }
}
